#!/bin/bash

SCRIPT_DIR="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
TONPOOL_STATS_JSON="$SCRIPT_DIR/data/stats.json"

if test -f $TONPOOL_STATS_JSON; then
    shares_accepted=$(jq ".ar | .[0] | tostring" $TONPOOL_STATS_JSON)
    shares_rejected=$(jq ".ar | .[1] | tostring" $TONPOOL_STATS_JSON)
    hashrate_total=$(jq ".khs | . * 1000 | tostring" $TONPOOL_STATS_JSON)
    uptime_in_sec=$(jq ".uptime | tostring" $TONPOOL_STATS_JSON)

    declare -A gpus
    i=0
    for gpu in $(jq -rc ".gpus[]" $TONPOOL_STATS_JSON); do
        name="gpu$i"
        hs=$(echo "$gpu" | jq ".hashrate | . * 1000 | . * 1000")
        accepted=$(echo "$gpu" | jq ".accepted")
        rejected=$(echo "$gpu" | jq ".duplicate + .invalid + .stale")
        gpus[$name]="$hs/$accepted/$rejected"
        ((i=$i+1))
    done

    hashrate_gpu=",gpu0:${gpus["gpu0"]},gpu1:${gpus["gpu1"]},gpu2:${gpus["gpu2"]},gpu3:${gpus["gpu3"]},gpu4:${gpus["gpu4"]},gpu5:${gpus["gpu5"]},gpu6:${gpus["gpu6"]},gpu7:${gpus["gpu7"]},gpu8:${gpus["gpu8"]},gpu9:${gpus["gpu9"]},gpu10:${gpus["gpu10"]},gpu11:${gpus["gpu11"]},gpu12:${gpus["gpu12"]},gpu13:${gpus["gpu13"]},gpu14:${gpus["gpu14"]},gpu15:${gpus["gpu15"]}"
else
    shares_accepted="0"
    shares_rejected="0"
    hashrate_total="0"
    uptime_in_sec="1"
fi

pool="pplns.toncoinpool.io:443/stratum"

# You can break the code on any error
# echo "error"
# exit 1

# If everything went fine, status is reported back to the agent
# Do not edit the this line (Break the code with echo "error", exit 1 on error)
echo "hashrate_total:$hashrate_total,uptime:$uptime_in_sec,pool:$pool,shares_rejected:$shares_rejected,shares_accepted:$shares_accepted$hashrate_gpu"
